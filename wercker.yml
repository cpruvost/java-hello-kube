box: cpruvost/java-hello-kube

build:
  steps:
    - script:
        name: mvn package
        code: |
          mvn clean package
    
push-to-releases:
  steps:
    - script:
        name: check
        code: |
            java -version
    # Push to the private docker Container Registry (OCIR)
    - internal/docker-push:
          cmd: java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -jar ./target/rest-example-0.2.0.jar
          working-dir: $WERCKER_ROOT
          tag: $WERCKER_GIT_COMMIT
          ports: "8080"
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
          repository: $DOCKER_REPO
          registry: https://iad.ocir.io/v2
 
containers:
- name: get-ip-server
  image: ${DOCKER_REPO}:${WERCKER_GIT_COMMIT}
  ports:
  - name: get-ip-server
    containerPort: 8080
    protocol: TCP
imagePullSecrets:
- name:  ${OKE_IMAGESECRET} 
          
deploy-to-oke:
  box:
        id: python:2.7
       
  steps:
    - bash-template
    
    - script:
      name: Prepare Kubernetes files
      code: |
        mkdir $WERCKER_OUTPUT_DIR/kubernetes
        mv kubernetes_*.yml $WERCKER_OUTPUT_DIR/kubernetes
    
    - kubectl:
      name: deploy to kubernetes
      server: $OKE_MASTER
      token: $OKE_TOKEN
      insecure-skip-tls-verify: true
      command: apply -f $WERCKER_OUTPUT_DIR/kubernetes/